diff --git a/applications/account/src/app/Setup.tsx b/applications/account/src/app/Setup.tsx
index 74279d7fb..4282e13b7 100644
--- a/applications/account/src/app/Setup.tsx
+++ b/applications/account/src/app/Setup.tsx
@@ -3,14 +3,30 @@ import { locales } from '@proton/shared/lib/i18n/locales';
 import { PublicAuthenticationStore, PrivateAuthenticationStore, useAuthentication } from '@proton/components';
 
 import PrivateApp from './content/PrivateApp';
-import PublicApp from './content/PublicApp';
+
+import * as _ElectronMail_React_import_ from 'react';
+
+const RedirectToOrigin = () => {
+    const timeoutMs = 5000;
+    const { origin: destination } = window.location;
+    const message = `Redirecting to "${destination}" in ${timeoutMs}ms`;
+    let timeoutId: undefined | ReturnType<typeof setTimeout>;
+    _ElectronMail_React_import_.useEffect(() => {
+        timeoutId = setTimeout(
+            () => window.location.replace(destination),
+            timeoutMs
+        );
+        return () => clearTimeout(timeoutId);
+    });
+    return _ElectronMail_React_import_.createElement(_ElectronMail_React_import_.Fragment, null, message);
+};
 
 const Setup = () => {
-    const { UID, login, logout } = useAuthentication() as PublicAuthenticationStore & PrivateAuthenticationStore;
+    const { UID, logout } = useAuthentication() as PublicAuthenticationStore & PrivateAuthenticationStore;
     if (UID) {
         return <PrivateApp locales={locales} onLogout={logout} />;
     }
-    return <PublicApp locales={locales} onLogin={login} />;
+    return <RedirectToOrigin />;
 };
 
 export default Setup;

diff --git a/applications/account/src/app/content/MainContainer.tsx b/applications/account/src/app/content/MainContainer.tsx
index f14e76d5a..b21b54c97 100644
--- a/applications/account/src/app/content/MainContainer.tsx
+++ b/applications/account/src/app/content/MainContainer.tsx
@@ -91,7 +91,7 @@ const MainContainer = () => {
         setExpand(false);
     }, [location.pathname, location.hash]);

-    const app = getAppFromPathnameSafe(location.pathname) || DEFAULT_APP;
+    const app = getAppFromPathnameSafe(window.location.pathname) || DEFAULT_APP;
     const appSlug = getSlugFromApp(app);

     /*

