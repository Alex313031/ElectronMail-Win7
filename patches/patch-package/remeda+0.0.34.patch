diff --git a/node_modules/remeda/dist/commonjs/guards.d.ts b/node_modules/remeda/dist/commonjs/guards.d.ts
index dcaffcf..9aa1243 100644
--- a/node_modules/remeda/dist/commonjs/guards.d.ts
+++ b/node_modules/remeda/dist/commonjs/guards.d.ts
@@ -51,20 +51,6 @@ declare type DefinitelyBoolean<T> = Extract<T, boolean> extends never ? boolean
  * @category Guard
  */
 export declare function isBoolean<T>(data: T | boolean): data is DefinitelyBoolean<T>;
-declare type DefinitelyPromise<T extends unknown> = Extract<T, Promise<any>> extends never ? Promise<unknown> : Extract<T, Promise<any>>;
-/**
- * A function that checks if the passed parameter is a Promise and narrows it's type accordingly
- * @param data the variable to check
- * @signature
- *    R.isPromise(data)
- * @returns true if the passed input is a Promise, false otherwise
- * @example
- *    R.isPromise(Promise.resolve(5)) //=> true
- *    R.isPromise(Promise.reject(5)) //=> true
- *    R.isPromise('somethingElse') //=> false
- * @category Guard
- */
-export declare function isPromise<T>(data: T): data is DefinitelyPromise<T>;
 declare type DefinitelyArray<T extends unknown> = Extract<T, Array<any> | ReadonlyArray<any>> extends never ? ReadonlyArray<unknown> : Extract<T, Array<any> | ReadonlyArray<any>>;
 /**
  * A function that checks if the passed parameter is an Array and narrows it's type accordingly
